{"version":3,"sources":["main.js"],"names":["html","document","querySelector","string","string2","console","log","length","n","step","innerHTML","substring","scrollTo"],"mappings":";AAAA,IAAIA,EAAOC,SAASC,cAAc,SAC9BC,EAAJ,8jCA8CIC,EAAU,GAEdC,QAAQC,IAAIH,EAAOI,QACnB,IAAIC,EAAI,EAWJC,EAAO,SAAPA,IAEW,WAAA,WAIQ,OAAZN,EAAOK,GAEK,GAAA,OACQ,MAAZL,EAAOK,GACH,GAAA,SAEAL,GAAAA,EAAOK,GAEjBE,EAAAA,UAAYN,EACXM,MAAAA,UAAYP,EAAOQ,UAAU,EAAGH,GAC/BI,OAAAA,SAAS,EAAE,OACbA,EAAAA,SAAS,EAAE,OACbJ,EAAIL,EAAOI,OAAS,IAEd,GAAA,EACLE,MAEL,KAGPA","file":"main.91b89cbb.map","sourceRoot":"..\\src","sourcesContent":["let html = document.querySelector(\"#html\");\r\nlet string = `/*你好，我是Jeff\r\n*接下来我演示一下我的前端功底\r\n*首先我要准备一个div\r\n*/\r\n#div1{\r\n    border:1px solid red;\r\n    width: 200px;\r\n    height: 200px;\r\n}\r\n/* 接下来我把 div 变成一个八卦图\r\n * 注意看好了\r\n * 首先，把 div 变成一个圆\r\n **/\r\n#div1{\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 3px rgba(0,0,0,0.5);\r\n    border: none;\r\n}\r\n/* 八卦是阴阳形成的\r\n * 一黑一白\r\n **/\r\n#div1{\r\n    background: linear-gradient(90deg, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 50%, rgba(0,0,0,1) 50%, rgba(0,0,0,1) 100%);\r\n}\r\n/* 加两个神秘的小球 */\r\n#div1::before{\r\n    width: 100px;\r\n    height: 100px;\r\n    top: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #000;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, rgba(255,255,255,1) 0%, rgba(255,255,255,1) 25%, rgba(0,0,0,1) 25%, rgba(0,0,0,1) 100%);\r\n}\r\n#div1::after{\r\n    width: 100px;\r\n    height: 100px;\r\n    bottom: 0;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n    background: #fff;\r\n    border-radius: 50%;\r\n    background: radial-gradient(circle, rgba(0,0,0,1) 0%, rgba(0,0,0,1) 25%, rgba(255,255,255,1) 25%, rgba(255,255,255,1) 100%, rgba(0,0,0,1) 100%);\r\n}\r\n`\r\nlet string2 = '';\r\n// string = string.replace(/\\n/g,'<br>')\r\nconsole.log(string.length);\r\nlet n = 0;\r\n\r\n// demo.innerHTML = string.substring(0,n);\r\n\r\n// 老手不用 setTimeout\r\n// setInterval(()=>{\r\n//     n = n + 1;\r\n//     demo.innerHTML = n;\r\n// },1000);\r\n\r\n// 老手用 setTimeout 递归\r\nlet step = () => {\r\n    // console.log('1秒后把n加1并显示');\r\n    setTimeout(() => {\r\n        // console.log(n);\r\n        // n = n + 1;\r\n        // string2 += string[n] === '\\n' ? '<br>' : string[n];\r\n        if(string[n]==='\\n'){\r\n            // 如果是回车就是加上 <br>\r\n            string2 += '<br>'\r\n        } else if (string[n]===' ') {\r\n            string2 += '&nbsp;'\r\n        } else { // 如果不是回车就照搬\r\n            string2 += string[n]\r\n        } \r\n        html.innerHTML = string2;\r\n        style.innerHTML = string.substring(0, n);\r\n        window.scrollTo(0,99999)\r\n        html.scrollTo(0,99999)\r\n        if(n < string.length - 1){\r\n            // 不是最后一个\r\n            n += 1;\r\n            step();\r\n        }   \r\n    }, 50);\r\n};\r\n\r\nstep(); // 1=>2\r\n\r\n/* let style = document.querySelector('#style')\r\nsetTimeout(()=>{\r\n    style.innerHTML = `\r\n    body{\r\n        color: red;\r\n    }\r\n    `\r\n},3000) */\r\n"]}